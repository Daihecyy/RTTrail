// This file is auto-generated by @hey-api/openapi-ts

export type AccessToken = {
  access_token: string
  token_type: string
}

export type AccountType = "user" | "moderator" | "admin"

export type Body_create_current_user_profile_pictureusers_me_profile_picture_post =
  {
    image: Blob | File
  }

export type Body_login_for_access_token_login_access_token_post = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type Body_recover_user_login_recover_post = {
  email: string
}

export type ChangePassword = {
  email: string
  old_password: string
  new_password: string
}

/**
 * Information about RTTrail
 */
export type CoreInformation = {
  ready: boolean
  version: string
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type MailMigration = {
  new_email: string
}

export type ResetPassword = {
  reset_token: string
  new_password: string
}

export type Result = {
  success?: boolean
}

/**
 * Schema for user's model similar to user table in database
 */
export type User = {
  name: string
  id: string
  account_type: AccountType
  is_active: boolean
  email: string
  created_on?: string | null
}

export type UserActivate = {
  name: string
  activation_token: string
}

/**
 * The schema is used to send an account creation request.
 */
export type UserRegister = {
  email: string
  password: string
  name: string
}

/**
 * Simplified schema for user's model, used when getting all users
 */
export type UserSimple = {
  name: string
  id: string
  account_type: AccountType
  is_active: boolean
}

/**
 * Schema for user update
 */
export type UserUpdate = {
  name?: string | null
}

export type UserUpdateAdmin = {
  email?: string | null
  account_type?: AccountType | null
  name?: string | null
  is_active?: boolean | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type PostLoginAccessTokenData = {
  formData: Body_login_for_access_token_login_access_token_post
}

export type PostLoginAccessTokenResponse = AccessToken

export type PostLoginTestTokenData = {
  accountType?: AccountType | null
}

export type PostLoginTestTokenResponse = User

export type PostLoginResetPasswordData = {
  requestBody: ResetPassword
}

export type PostLoginResetPasswordResponse = Result

export type PostLoginMigrateMailData = {
  requestBody: MailMigration
}

export type PostLoginMigrateMailResponse = void

export type GetLoginMigrateMailConfirmData = {
  token: string
}

export type GetLoginMigrateMailConfirmResponse = unknown

export type PostLoginChangePasswordData = {
  requestBody: ChangePassword
}

export type PostLoginChangePasswordResponse = Result

export type PostLoginActivateData = {
  requestBody: UserActivate
}

export type PostLoginActivateResponse = Result

export type PostLoginRecoverData = {
  requestBody: Body_recover_user_login_recover_post
}

export type PostLoginRecoverResponse = Result

export type GetInformationResponse = CoreInformation

export type GetPrivacyResponse = unknown

export type GetTermsAndConditionsResponse = unknown

export type GetSupportResponse = unknown

export type GetSecurityTxtResponse = unknown

export type GetWellKnownSecurityTxtResponse = unknown

export type GetRobotsTxtResponse = unknown

export type GetStyleFileCssData = {
  file: string
}

export type GetStyleFileCssResponse = unknown

export type GetFaviconIcoResponse = unknown

export type GetUsersMeResponse = User

export type PatchUsersMeData = {
  requestBody: UserUpdate
}

export type PatchUsersMeResponse = void

export type PostUsersMeAskDeletionResponse = void

export type GetusersMeProfilePictureResponse = unknown

export type PostusersMeProfilePictureData = {
  formData: Body_create_current_user_profile_pictureusers_me_profile_picture_post
}

export type PostusersMeProfilePictureResponse = Result

export type GetUsersData = {
  accountTypes?: Array<AccountType>
}

export type GetUsersResponse = Array<UserSimple>

export type GetUsersCountResponse = number

export type GetUsersSearchData = {
  accountType?: AccountType | null
  excludedAccountTypes?: Array<AccountType>
  includedAccountTypes?: Array<AccountType>
  query: string
}

export type GetUsersSearchResponse = Array<UserSimple>

export type GetUsersAccountTypesResponse = Array<AccountType>

export type PostUsersRegisterData = {
  requestBody: UserRegister
}

export type PostUsersRegisterResponse = Result

export type GetUsersUserIdData = {
  userId: string
}

export type GetUsersUserIdResponse = User

export type PatchUsersUserIdData = {
  requestBody: UserUpdateAdmin
  userId: string
}

export type PatchUsersUserIdResponse = void

export type GetUsersUserIdProfilePictureData = {
  userId: string
}

export type GetUsersUserIdProfilePictureResponse = unknown
